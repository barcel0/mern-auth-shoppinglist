{"version":3,"sources":["actions/errorActions.js","actions/types.js","actions/authActions.js","Components/NavBar.js","actions/itemActions.js","Components/AddItem.js","Components/List.js","Components/Auth/Register.js","Components/Auth/Login.js","reducers/itemReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["returnErrors","msg","status","id","type","payload","clearErrors","tokenConfig","getState","token","auth","config","headers","connect","state","error","logout","props","to","onClick","isAuthenticated","user","name","setItemsLoading","item","addItem","dispatch","axios","post","then","res","data","catch","err","response","useState","setName","className","placeholder","value","onChange","e","target","length","newItem","handleAddItemClick","getItems","get","deleteItem","delete","useEffect","items","map","key","_id","serveItems","register","history","email","password","body","JSON","stringify","push","setEmail","setPassword","setMsg","useHistory","handleInputChange","field","onSubmit","preventDefault","newUser","handleSubmit","login","initialState","loading","localStorage","getItem","isLoading","combineReducers","action","concat","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1bad1293.chunk.js","sourcesContent":["import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\r\n\r\n//Return errors\r\nexport const returnErrors = (msg, status, id = null) => {\r\n  return {\r\n    type: GET_ERRORS,\r\n    payload: { msg, status, id }\r\n  }\r\n}\r\n\r\n//Clear errors\r\nexport const clearErrors = () => {\r\n  return {\r\n    type: CLEAR_ERRORS\r\n  }\r\n}","export const GET_ITEMS = 'GET_ITEMS';\r\nexport const ADD_ITEM = 'ADD_ITEM';\r\nexport const DELETE_ITEM = 'DELETE_ITEM';\r\nexport const ITEMS_LOADING = 'ITEMS_LOADING';\r\n\r\nexport const USER_LOADING = 'USER_LOADING';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const GET_ERRORS = 'GET_ERRORS';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';","import axios from 'axios';\r\nimport { returnErrors } from './errorActions';\r\nimport { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL } from '../actions/types';\r\n\r\n//Check token and load user\r\nexport const loadUser = () => (dispatch, getState) => {\r\n  //User loading\r\n  dispatch({ type: USER_LOADING });\r\n\r\n  axios.get('/api/auth/user', tokenConfig(getState))\r\n    .then(res => dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    }))\r\n    .catch(err => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n      dispatch({\r\n        type: AUTH_ERROR\r\n      });\r\n    })\r\n}\r\n\r\n//Register user\r\nexport const register = ({ name, email, password }, history) => dispatch => {\r\n  //Headers\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  //Request body\r\n  const body = JSON.stringify({ name, email, password });\r\n  axios.post('/api/users', body, config)\r\n    .then(res => {\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data\r\n      });\r\n      history.push('/');\r\n    })\r\n    .catch(err => {\r\n      dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\r\n      dispatch({ type: REGISTER_FAIL });\r\n    });\r\n}\r\n\r\n//Login user\r\nexport const login = ({ email, password }, history) => dispatch => {\r\n  //Headers\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  //Request body\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  axios.post('/api/auth', body, config)\r\n    .then(res => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data\r\n      })\r\n      history.push('/');\r\n    })\r\n    .catch(err => {\r\n      dispatch(returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL'));\r\n      dispatch({ type: LOGIN_FAIL });\r\n    });\r\n}\r\n\r\n//Logout user\r\nexport const logout = () => {\r\n  return {\r\n    type: LOGOUT_SUCCESS\r\n  }\r\n}\r\n\r\n//Setup config/headers and token\r\nexport const tokenConfig = (getState) => {\r\n  //Get token from localStorate\r\n  const token = getState().auth.token;\r\n\r\n  //Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-type\": \"application/json\"\r\n    }\r\n  }\r\n\r\n  //If token, add to headers\r\n  if (token) config.headers['x-auth-token'] = token;\r\n\r\n  return config;\r\n}\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { clearErrors } from '../actions/errorActions';\r\nimport { logout } from '../actions/authActions';\r\nimport propTypes from 'prop-types';\r\n\r\nconst NavBar = (props) => {\r\n\r\n  const serveAuthLinks = () => {\r\n    if (!props.auth.isAuthenticated) {\r\n      return (\r\n        <ul>\r\n          <li><Link to='/login' onClick={() => props.clearErrors()}>Login</Link></li>\r\n          <li><Link to='/register' onClick={() => props.clearErrors()}>Register</Link></li>\r\n        </ul>\r\n      );\r\n    } else {\r\n      return (\r\n        <ul>\r\n          <li>Welcome back {props.auth.user.name}!</li>\r\n          <li><Link to='#' onClick={props.logout}>Logout</Link></li>\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1 ><Link to='/' onClick={() => props.clearErrors()}>BORING SHOPPING LIST</Link></h1>\r\n        {serveAuthLinks()}\r\n      </header>\r\n      <nav>The main purpose of this MERN app is to create a basic JWT based authentication system and learn some Redux.</nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavBar.propTypes = {\r\n  clearErrors: propTypes.func.isRequired,\r\n  logout: propTypes.func.isRequired,\r\n  error: propTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  error: state.error,\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { clearErrors, logout })(NavBar);\r\n\r\n","import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from './types';\r\nimport { tokenConfig } from './authActions';\r\nimport { returnErrors } from './errorActions';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const getItems = () => dispatch => {\r\n  dispatch(setItemsLoading());\r\n  axios\r\n    .get('/api/items')\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_ITEMS,\r\n        payload: res.data\r\n      })\r\n    })\r\n    .catch(err => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n    });\r\n}\r\n\r\nexport const addItem = (item) => (dispatch, getState) => {\r\n  dispatch(setItemsLoading());\r\n  axios\r\n    .post('/api/items', item, tokenConfig(getState))\r\n    .then(res => {\r\n      dispatch({\r\n        type: ADD_ITEM,\r\n        payload: res.data\r\n      })\r\n    })\r\n    .catch(err => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n    });\r\n\r\n  return {\r\n    type: ADD_ITEM,\r\n    payload: item\r\n  }\r\n}\r\n\r\nexport const deleteItem = (id) => (dispatch, getState) => {\r\n  dispatch(setItemsLoading());\r\n  axios\r\n    .delete('/api/items/' + id, tokenConfig(getState))\r\n    .then(res => {\r\n      dispatch({\r\n        type: DELETE_ITEM,\r\n        payload: id\r\n      })\r\n    })\r\n    .catch(err => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n    });\r\n\r\n  return {\r\n    type: DELETE_ITEM,\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport const setItemsLoading = () => {\r\n  return {\r\n    type: ITEMS_LOADING\r\n  }\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../actions/itemActions';\r\nimport propTypes from 'prop-types';\r\n\r\nconst AddItem = (props) => {\r\n\r\n  const [name, setName] = useState('');\r\n\r\n  const handleAddItemClick = () => {\r\n    if (name.length >= 3) {\r\n      setName('');\r\n      const newItem = {\r\n        name: name\r\n      }\r\n      props.addItem(newItem);\r\n    }\r\n  }\r\n\r\n  const serveContent = () => {\r\n    if (props.auth.isAuthenticated) {\r\n      return (\r\n        <div className=\"button-row\">\r\n          <input type=\"text\" placeholder=\"Type new item here...\" value={name} onChange={(e) => setName(e.target.value)}></input>\r\n          <div className=\"btn\" onClick={() => handleAddItemClick()}>Add Item</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"button-row\">\r\n          <span>Log in to add new items.</span>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return serveContent();\r\n}\r\n\r\nAddItem.propTypes = {\r\n  addItem: propTypes.func.isRequired,\r\n  item: propTypes.object.isRequired,\r\n  auth: propTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  item: state.item,\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { addItem })(AddItem);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getItems, deleteItem } from '../actions/itemActions';\r\nimport propTypes from 'prop-types';\r\nimport AddItem from './AddItem';\r\n\r\nconst List = (props) => {\r\n  const getItems = props.getItems;\r\n\r\n  useEffect(() => {\r\n\r\n    getItems();\r\n  }, [getItems]);\r\n\r\n  const serveItems = () => {\r\n    const { items } = props.item;\r\n    if (items) {\r\n      return items.map(item => {\r\n        return (\r\n          <li key={item._id}>\r\n            <h2>{item.name}</h2>\r\n            {props.isAuthenticated ? <div className=\"btn-delete\" onClick={() => props.deleteItem(item._id)}>Delete</div> : null}\r\n          </li>\r\n        );\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"box\">\r\n        <AddItem />\r\n        <div className=\"list-container\">\r\n          <ul>\r\n            {serveItems()}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nList.propTypes = {\r\n  getItems: propTypes.func.isRequired,\r\n  item: propTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  item: state.item,\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    getItems, deleteItem\r\n  })(List);","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport { register } from '../../actions/authActions';\r\nimport { clearErrors } from '../../actions/errorActions';\r\n\r\nconst Register = (props) => {\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [msg, setMsg] = useState('');\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const error = props.error;\r\n    if (error) {\r\n      if (error.id === 'REGISTER_FAIL') {\r\n        setMsg(error.msg.msg);\r\n      } else {\r\n        setMsg(null);\r\n      }\r\n    }\r\n  }, [props.error]);\r\n\r\n  const handleInputChange = (field, e) => {\r\n    switch (field) {\r\n      case 'name':\r\n        setName(e.target.value);\r\n        break;\r\n      case 'email':\r\n        setEmail(e.target.value);\r\n        break;\r\n      case 'password':\r\n        setPassword(e.target.value);\r\n        break;\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newUser = { name, email, password };\r\n    //Attempt to register\r\n    props.register(newUser, history);\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"container-column\">\r\n        <h2>Create New User</h2>\r\n        {msg ? <span className=\"alert\">{msg}</span> : null}\r\n        <form onSubmit={(e) => handleSubmit(e)} >\r\n          <input type=\"text\" placeholder=\"Name\" name=\"name\" id=\"name\" onChange={(e) => handleInputChange('name', e)}></input>\r\n          <input type=\"text\" placeholder=\"Email\" name=\"email\" id=\"email\" onChange={(e) => handleInputChange('email', e)}></input>\r\n          <input type=\"password\" placeholder=\"Password\" name=\"password\" id=\"password\" onChange={(e) => handleInputChange('password', e)}></input>\r\n          <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n\r\n}\r\n\r\nRegister.propTypes = {\r\n  isAuthenticated: propTypes.bool.isRequired,\r\n  register: propTypes.func.isRequired,\r\n  clearErrors: propTypes.func.isRequired,\r\n  error: propTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error\r\n})\r\n\r\nexport default connect(mapStateToProps, { register, clearErrors })(Register);","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport { login } from '../../actions/authActions';\r\nimport { clearErrors } from '../../actions/errorActions';\r\n\r\nconst Login = (props) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [msg, setMsg] = useState('');\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const error = props.error;\r\n    if (error) {\r\n      if (error.id === 'LOGIN_FAIL') {\r\n        setMsg(error.msg.msg);\r\n      } else {\r\n        setMsg(null);\r\n      }\r\n    }\r\n  }, [props.error]);\r\n\r\n  const handleInputChange = (field, e) => {\r\n    switch (field) {\r\n      case 'email':\r\n        setEmail(e.target.value);\r\n        break;\r\n      case 'password':\r\n        setPassword(e.target.value);\r\n        break;\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //Attempt to login\r\n    props.login({ email, password }, history);\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"container-column\">\r\n        <h2>User Login</h2>\r\n        {msg ? <span className=\"alert\">{msg}</span> : null}\r\n        <form onSubmit={(e) => handleSubmit(e)} >\r\n          <input type=\"text\" placeholder=\"Email\" name=\"email\" id=\"email\" onChange={(e) => handleInputChange('email', e)}></input>\r\n          <input type=\"password\" placeholder=\"Password\" name=\"password\" id=\"password\" onChange={(e) => handleInputChange('password', e)}></input>\r\n          <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n\r\n}\r\n\r\nLogin.propTypes = {\r\n  isAuthenticated: propTypes.bool.isRequired,\r\n  login: propTypes.func.isRequired,\r\n  clearErrors: propTypes.func.isRequired,\r\n  error: propTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error\r\n})\r\n\r\nexport default connect(mapStateToProps, { login, clearErrors })(Login);","import {GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING} from '../actions/types';\r\n\r\nconst initialState = {\r\n  items: [],\r\n  loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n  switch(action.type){\r\n    case GET_ITEMS:\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n        loading: false\r\n      }\r\n    case ADD_ITEM:\r\n      return{\r\n        ...state,\r\n        items: state.items.concat(action.payload)\r\n      }\r\n    case DELETE_ITEM:\r\n      return{\r\n        ...state,\r\n        items: state.items.filter(item=>item._id !== action.payload),\r\n        \r\n      }\r\n    case ITEMS_LOADING:\r\n      return{\r\n        ...state,\r\n        loading: true\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {\r\n  msg: {},\r\n  status: null,\r\n  id: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return {\r\n        msg: action.payload.msg,\r\n        status: action.payload.status,\r\n        id: action.payload.id\r\n      }\r\n    case CLEAR_ERRORS:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL } from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  isLoading: false,\r\n  user: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      }\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        user: action.payload\r\n      }\r\n    case LOGIN_SUCCESS:\r\n    case REGISTER_SUCCESS:\r\n      localStorage.setItem('token', action.payload.token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n      }\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT_SUCCESS:\r\n    case REGISTER_FAIL:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        isLoading: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}","import {combineReducers} from 'redux';\r\nimport itemReducer from './itemReducer';\r\nimport errorReducer from './errorReducer';\r\nimport authReducer from './authReducer';\r\n\r\nexport default combineReducers({\r\n  item: itemReducer,\r\n  auth: authReducer,\r\n  error: errorReducer\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index'\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(rootReducer, initialState, compose(\r\n  applyMiddleware(...middleware),\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nexport default store;","import React, { useEffect } from 'react';\nimport NavBar from './Components/NavBar';\nimport List from './Components/List'\nimport Register from './Components/Auth/Register';\nimport Login from './Components/Auth/Login';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.scss';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/authActions';\n\nfunction App() {\n\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route path=\"/\" exact><List /></Route>\n            <Route path=\"/register\" exact><Register /></Route>\n            <Route path=\"/login\" exact><Login /></Route>\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}